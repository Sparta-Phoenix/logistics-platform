plugins {
	id 'java'
	id 'org.springframework.boot' version '3.1.0'
	id 'io.spring.dependency-management' version '1.1.6'
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:2022.0.5"
	}
}

group = 'com.logistics.platform'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {

	// Spring Retry
	implementation 'org.springframework.retry:spring-retry:1.3.1' // 최신 버전 확인

	// Spring AOP, @Retryable를 사용하려면 필요
	implementation 'org.springframework.boot:spring-boot-starter-aop'

	// PostgreSQL
	runtimeOnly 'org.postgresql:postgresql'

	// Redis Session Clustering
	implementation 'org.springframework.session:spring-session-data-redis'

	// Jedis
	implementation 'redis.clients:jedis:4.3.1'

	// QueryDSL 적용을 위한 의존성 (SpringBoot3.0 부터는 jakarta 사용)
	implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
	// QueryDSL APT 의존성 (annotation processing을 위한 의존성)
	annotationProcessor 'com.querydsl:querydsl-apt:5.0.0:jakarta'
	// Jakarta API 의존성
	annotationProcessor "jakarta.annotation:jakarta.annotation-api"
	annotationProcessor "jakarta.persistence:jakarta.persistence-api"

	// Eureka client
	implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'

	// FeignClient, Ribbon
	implementation 'org.springframework.cloud:spring-cloud-starter-openfeign'

	// config client
	implementation 'org.springframework.cloud:spring-cloud-starter-config'

	// Zipkin
	implementation 'io.micrometer:micrometer-tracing-bridge-brave'
	implementation 'io.github.openfeign:feign-micrometer'
	implementation 'io.zipkin.reporter2:zipkin-reporter-brave'

	// Resilience4j
	implementation 'io.github.resilience4j:resilience4j-spring-boot3:2.2.0'
	implementation 'org.springframework.boot:spring-boot-starter-aop'
	runtimeOnly 'io.micrometer:micrometer-registry-prometheus'

	// Spring Boot Actuator
	implementation 'org.springframework.boot:spring-boot-starter-actuator'

	// Lombok
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'

	// Valid
	implementation 'org.springframework.boot:spring-boot-starter-validation'

	// Swagger
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.5.0'

	// JPA
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

	implementation 'org.springframework.boot:spring-boot-starter-web'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

	// JackSon
	implementation 'com.bedatadriven:jackson-datatype-jts:2.4'
}

tasks.named('test') {
	useJUnitPlatform()
}
